schema: 1
type: resource-context

id: iam-user-context
name: IAM user resource context

csp: aws
service: iam
resource-type: user

filters:
  - match-type: any
    rules:
      - .resourceType == "user" and .csp =="aws" and .service == "iam"

steps:
  - id: riskyPermissions
    uses: GetIAMPolicyRisks
    with:
      - name: iamArn
        value: .canonicalId
      - name: region
        value: .region

risk-config:
  default-risk: ""
  rules:
    - id: instance-has-permissions-that-allow-privilegeEscalation
      condition: .riskyPermissions.result.PrivilegeEscalation | length > 0
      risk: high

    - id: instance-has-permissions-that-allow-credentials-exposure
      condition: .riskyPermissions.result.CredentialsExposure | length > 0
      risk: high

    - id: instance-has-permissions-that-allow-data-exfiltration
      condition: .riskyPermissions.result.DataExfiltration | length > 0
      risk: medium

    - id: instance-has-permissions-that-allow-infrastructure-modification
      condition: .riskyPermissions.result.InfrastructureModification | length > 0
      risk: low

    - id: instance-has-permissions-that-allow-resource-exposure
      condition: .riskyPermissions.result.ResourceExposure | length > 0
      risk: low
